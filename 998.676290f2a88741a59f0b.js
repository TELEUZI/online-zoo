(self.webpackChunkrace_game=self.webpackChunkrace_game||[]).push([[998],{998:(t,e,s)=>{"use strict";s.r(e),s.d(e,{GaragePage:()=>x});var i=s(111),n=s(583),a=s(113);class r extends n.Z{constructor(t,e){super("div",["modal"]),this.modalWrapper=new n.Z("div",["grey-modal"]),this.modalContent=t,this.modalContent.addClass("modal-content"),this.insertChild(this.modalContent),this.insertChild(this.modalWrapper),e&&e.appendChild(this.node)}toggleModal(){this.toggleClass("hidden")}}class o extends n.Z{constructor(t,e){super("div",[],t),this.onOkClick=e,this.okButtonHandler=()=>{this.node.innerText="",this.okButton=new a.Z("ok",[],this.okButtonHandler.bind(this)),this.insertChild(this.okButton),this.onOkClick?.()},this.node.innerText=t,this.okButton=new a.Z("ok",[],this.okButtonHandler.bind(this)),this.insertChild(this.okButton)}close(){this.toggleClass("hidden")}}var h=s(706);class c extends n.Z{constructor(t){super("form",["form",...t],""),this.inputs=[],this.setAttribute("action",""),this.createFormComponents(),this.inputs.push(this.carNameInput,this.colorInput),this.createUI(),this.addUserInputListeners()}addUserInputListeners(){this.reset.addListener("click",(t=>{t.preventDefault(),this.resetForm()})),this.submit.addListener("click",(t=>{t.preventDefault();const[e,s]=[...this.inputs.map((t=>t.getValue()))];this.onSubmit?.({name:e,color:s}),this.resetForm()}))}onValidate(){this.inputs.every((t=>t.isValid))&&this.submit.removeAttribute("disabled")}resetForm(){this.carNameInput.getNode().value="",this.colorInput.getNode().value="#000000"}createFormComponents(){this.carNameInput=new h.Z("text",["form__car-input_text"],"Car name"),this.colorInput=new h.Z("color",["form__car-input_color"]),this.reset=new h.Z("reset",["form__car-input_control"],"","Reset"),this.submit=new h.Z("submit",["form__car-input_control"],"","Create")}createUI(){const t=new n.Z("div",["form__inputs-wrapper"]),e=new n.Z("div",["form__controls"]);t.appendChildren(this.inputs),e.appendChildren([this.reset,this.submit]),this.appendChildren([t,e])}}class d{constructor(){this.start=()=>{this.interval=window.setInterval(this.tick,1e3)},this.stop=()=>{clearInterval(this.interval)},this.reset=()=>{this.stop(),this.minutes=0,this.seconds=0,this.currentTimeInSeconds=0},this.tick=()=>{this.currentTimeInSeconds+=1,this.onTick&&this.onTick(this.getTime())},this.minutes=0,this.seconds=0,this.currentTimeInSeconds=0}getTime(){return this.minutes=Math.floor(this.currentTimeInSeconds/60),this.seconds=this.currentTimeInSeconds-60*this.minutes,{minutes:this.minutes,seconds:this.seconds}}getSeconds(){return this.currentTimeInSeconds}}class u extends n.Z{constructor(){super("div",["timer"]),this.setContent("00:00")}setTime(t){this.setContent(t)}}class m{constructor(){this.isRunning=!0,this.currentTime="",this.view=new u,this.model=new d,this.model.onTick=this.updateView.bind(this)}getCurrentTime(t){return this.currentTime=`${t.minutes<=9?`0${t.minutes}`:t.minutes}:${t.seconds<=9?`0${t.seconds}`:t.seconds}`,this.currentTime}getTime(){return this.getCurrentTime(this.model.getTime())}updateView(t){this.view.setTime(this.getCurrentTime(t))}start(t){setTimeout((()=>{this.model.start()}),t)}getNode(){return this.view.getNode()}toggle(){this.isRunning?(this.isRunning=!1,this.model.stop()):(this.isRunning=!0,this.model.start())}reset(){this.model.reset()}getSeconds(){return this.model.getSeconds()}}var l=s(880),p=s(628);const g=["Ford","BMW","Jeep","Volvo","Opel","Jiguli","Ferrari","Mitsubishi","Skoda","Belaz"],C=["НЕзбагОЙный","P a F F o S S H H ы Й","ecl!pse ","Anime","TaTaPuH ","NaGiB4Uk","ApAsNыЙ","gopSTOP","gonschik","piton"];function w(t){return Math.floor(Math.random()*t)}var T=s(562),b=s(884);class k{static async getCars(t,e){const s=await(0,p.Rn)(t,e);return this.carsCount.notify(parseInt(s.count,10)),s.items}static async getCarsCount(){return k.carsCount.getValue()}static async createCars(){await Promise.all(Array.from({length:100},(()=>(0,p.DT)({name:`${g[w(g.length)]} ${C[w(C.length)]}`,color:`#${w(16**6).toString(16)}`})))),this.carsCount.notify((t=>t+100))}static async createCar(t,e){await(0,p.DT)({name:t,color:e}),this.carsCount.notify((t=>t+1))}static deleteCar(t){return this.carsCount.notify((t=>t-1)),(0,T.BS)(t).then((()=>(0,p.tD)(t)))}static updateCar(t,e,s){return(0,p.Bo)(t,{name:e,color:s})}}k.carsCount=new b.Z(0);var v=s(945);class _ extends v.Z{constructor(t,e,s=[],{start:i,stop:n}={start:{textContent:"Start"},stop:{textContent:"Stop"}}){super(t,e,["animation-controls",...s??[]],{start:i,stop:n})}handleEmits(t,e,s){"before"===s?t().then((()=>e())):(e(),t())}}const f=`${s(376).Z.baseUrl}/engine`;var P;!function(t){t.started="started",t.stopped="stopped",t.drive="drive"}(P||(P={}));var y=s(431);class Z extends a.Z{constructor(t){super("Edit",["task__edit-btn"],t)}moveToEditState(t){this.setContent("Edit"),this.updateOnClick(t)}moveToSubmitState(t){this.setContent("Submit"),this.updateOnClick(t)}}var S=s(497);class B extends n.Z{constructor({id:t,name:e,color:s},i){super("div",["car-track"]),this.onUpdate=i,this.id=t,this.car=new S.Z(e,s),this.animationControls=new _(this.animateCar.bind(this),this.stopCarAnimation.bind(this),["car-track__animation-controls"]),this.updateButton=new Z(this.editCar.bind(this)),this.deleteButton=new a.Z("Delete",["delete-button"],this.deleteCar.bind(this));const n=new y.Z(["finish-flag"]);this.appendChildren([n,this.animationControls,this.car,this.deleteButton,this.updateButton])}editCar(){this.car.toggleUpdateMode(),this.updateButton.moveToSubmitState(this.submit.bind(this))}submit(){k.updateCar(this.id,this.car.getName(),this.car.getColor()).then((()=>{this.car.toggleUpdateMode(),this.car.updateValuesFromForm(),this.updateButton.moveToEditState(this.editCar.bind(this))}))}deleteCar(){k.deleteCar(this.id).then((()=>{this.destroy(),this.onUpdate?.()}))}async animateCar(){const t=await async function(t){return(await fetch(`${f}?id=${t}&status=${P.started}`,{method:"PATCH"})).json()}(this.id);return this.car.startAnimation(t.distance/t.velocity*2+"ms"),new Promise((t=>async function(t){try{const e=await fetch(`${f}?id=${t}&status=${P.drive}`,{method:"PATCH"});return await e.json()}catch(t){return{success:!1}}}(this.id).then((e=>{e.success?t({id:this.id,name:this.car.getName(),color:this.car.getColor()}):this.pauseAnimation()}))))}async stopCarAnimation(){await async function(t){return(await fetch(`${f}/?id=${t}&status=${P.stopped}`,{method:"PATCH"})).json()}(this.id),this.car.stopAnimation()}pauseAnimation(){this.car.pauseAnimation()}}class A extends n.Z{constructor(t,e,s){super("div",["garage"]),this.onRaceStart=t,this.onRaceEnd=e,this.onPaginate=s,this.carTracks=[],this.cancelRace=!1,this.raceEnded=!1,this.animationControls=new _(this.animateAllCars.bind(this),this.stopAllCars.bind(this),["garage__controls"],{start:{textContent:"Start race"},stop:{textContent:"Stop race"}}),this.tracksContainer=new n.Z("div",["garage__tracks"]),this.header=new n.Z("h2",["page__name"],"Garage (0)"),this.pageNumber=new n.Z("h3",["page__number"],"Page #(0)"),this.prependChildren([this.tracksContainer,this.animationControls,this.pageNumber,this.header]),k.carsCount.subscribe((t=>{this.header.setContent(`Garage (${t})`)}))}async createGarage(t){return this.onPaginate(),this.updateTracksNumber(t)}async updateTracks(t){this.destroyCarTracks();const e=await k.getCars(t??0);this.carTracks=e.map((e=>new B(e,(()=>this.updateGarageWithPagination(t??0))))),this.tracksContainer.appendChildren([...this.carTracks])}async animateAllCars(){this.onRaceStart(),Promise.any(this.carTracks.map((t=>t.animateCar()))).then((t=>{this.cancelRace?this.cancelRace=!1:this.onRaceEnd(t),this.raceEnded=!0}))}async stopAllCars(){return this.raceEnded||(this.cancelRace=!0),Promise.all(this.carTracks.map((t=>t.stopCarAnimation())))}async updateTracksNumber(t){return this.pageNumber.setContent(`Page #(${t})`),this.updateTracks(t)}async updateGarageWithPagination(t){return this.onPaginate(),this.updateTracks(t)}destroyCarTracks(){this.tracksContainer.destroyChildren()}}var $=s(345);class x extends $.ZP{constructor(){super(),this.handleRaceEnd=async t=>{await l.Z.createWinner(t.id,this.timer.getSeconds()),this.createWinPopup(`Первым пришёл водитель ${t.name} за ${this.timer.getTime()}`),this.toggleModal(),this.timer.reset()},this.garage=new A(this.startTimer.bind(this),this.handleRaceEnd.bind(this),this.updatePaginationButtons.bind(this)),this.paginationControls=new i.Z(this.showNext.bind(this),this.showPrevious.bind(this),["page__controls_pagination"]),this.form=new c(["car-form"]),this.form.onSubmit=this.getFormData.bind(this),this.randomCarsButton=new a.Z("Generate random cars",["page__controls_random-cars"],this.createRandomCars.bind(this)),this.timer=new m;const t=new n.Z("div",["page__controls"]),e=new n.Z("h2",["form-explanation"],"Create new car!");t.appendChildren([this.randomCarsButton,this.paginationControls]),this.appendChildren([e,this.form,t,this.garage]),this.popUp=new o("",this.toggleModal.bind(this)),this.modal=new r(this.popUp,this.node),this.toggleModal(),this.garage.createGarage(this.currentPage).then((()=>this.updatePaginationButtons()))}async getCount(){return k.getCarsCount()}startTimer(){this.timer.start(0)}async getFormData(t){return await this.updatePaginationButtons(),await k.createCar(t.name,t.color),this.garage.updateGarageWithPagination(this.currentPage)}showNext(){return this.currentPage+=1,this.garage.updateTracksNumber(this.currentPage)}createRandomCars(){return k.createCars().then((()=>this.garage.updateGarageWithPagination(this.currentPage)))}async showPrevious(){return this.currentPage-=1,this.garage.updateTracksNumber(this.currentPage)}toggleModal(){this.modal.toggleModal()}createWinPopup(t){const e=new n.Z("span",[],t);this.popUp.insertChild(e)}}}}]);