(self.webpackChunkrace_game=self.webpackChunkrace_game||[]).push([[125],{125:(t,e,s)=>{"use strict";s.r(e),s.d(e,{WinnersPage:()=>l});var i=s(583),n=s(880);class r extends i.Z{constructor(t,e){super("td",["table__col"]),this.setContent(t),e&&this.setHTML(e)}}var a=s(111);class h extends i.Z{constructor(t,e){super("th",["table__head"],t),this.onClick=e,this.onClick=e,this.node.onclick=()=>this.onClick?.()}}class o extends i.Z{constructor(t,e){super("table",["table"]),this.rows=[],this.body=new i.Z("tbody");const s=new i.Z("thead"),n=new i.Z("tr"),r=[new h("Number"),new h("Car"),new h("Name"),new h("Wins",t),new h("Best time (seconds)",e)];n.appendChildren(r),s.insertChild(n),this.insertChild(s),this.insertChild(this.body)}pushRow(t){this.body.insertChild(t),this.rows.push(t)}updateRow(t,e){const s=this.rows[e];s&&s.update(t.name,t.color,t.wins,t.time)}clearBody(){this.body.destroyChildren(),this.rows=[]}}var c=s(497);class w extends i.Z{constructor(t,e,s,i){super("tr",["table__row"]),this.wins=s,this.bestTime=i,this.car=new c.Z(t,e),this.wins=s,this.bestTime=i,this.carImage=new r("",this.car.getSVGInHTML()),this.carName=new r(this.car.getName()),this.winsAmount=new r(this.wins.toString()),this.winnerBestTime=new r(this.bestTime.toString()),this.appendChildren([this.carImage,this.carName,this.winsAmount,this.winnerBestTime])}update(t,e,s,i){this.car.setColor(e),this.car.setName(t),this.wins=s,this.bestTime=i,this.updateRow()}updateRow(){this.carImage.setHTML(this.car.getSVGInHTML()),this.carName.setContent(this.car.getName()),this.winsAmount.setContent(this.wins.toString()),this.winnerBestTime.setContent(this.bestTime.toString())}}var u=s(345);class l extends u.ZP{constructor(){super(),this.paginationLimit=u.ik,this.winSortType="ASC",this.lastChosen=[],this.currentPage=1,this.winnersTable=new o(this.sortTable.bind(this,"wins"),this.sortTable.bind(this,"time")),this.paginationControls=new a.Z(this.showNext.bind(this),this.showPrevious.bind(this),["page__controls_pagination","garage__controls"]),this.header=new i.Z("h2",["page__name"]),this.pageNumber=new i.Z("h3",["page__number"],`Page #(${this.currentPage})`),this.appendChildren([this.paginationControls,this.header,this.pageNumber,this.winnersTable]),n.Z.winnersCount.subscribe((t=>{this.header.setContent(`Winners (${t})`)})),this.updateTable()}async getCount(){return n.Z.getCount()}async updateTable(){const t=(await n.Z.getWinners(this.currentPage,...this.lastChosen)).map((({name:t,color:e,wins:s,time:i})=>new w(t,e,s,i)));this.createTableUI(t)}async sortTable(t="id"){const e=await this.getSortedBy(t);this.recreateTableUI(e)}createTableUI(t){this.winnersTable.clearBody(),this.updatePaginationButtons().then((()=>{this.pageNumber.setContent(`Page #(${this.currentPage})`),t.forEach(((t,e)=>{t.prepend(new r((e+1).toString())),this.winnersTable.pushRow(t)}))}))}recreateTableUI(t){t.forEach(((t,e)=>{this.winnersTable.updateRow(t,e)}))}async getSortedBy(t){return this.winSortType="ASC"===this.winSortType?"DESC":"ASC",this.lastChosen=[t,this.winSortType],n.Z.getWinners(this.currentPage,t,this.winSortType)}async showNext(){return this.currentPage+=1,this.updateTable()}async showPrevious(){return this.currentPage-=1,this.updateTable()}}}}]);